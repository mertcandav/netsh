<?xml version="1.0"?>
<doc>
    <assembly>
        <name>netsh</name>
    </assembly>
    <members>
        <member name="T:NetSh.Extensions.GenericExtensions">
            <summary>
            Generic extension functions.
            </summary>
        </member>
        <member name="M:NetSh.Extensions.GenericExtensions.Write(System.Object)">
            <summary>
            Write.
            </summary>
            <param name="obj">Object to write.</param>
        </member>
        <member name="M:NetSh.Extensions.GenericExtensions.WriteLine(System.Object)">
            <summary>
            WriteLine.
            </summary>
            <param name="obj">Object to write.</param>
        </member>
        <member name="T:NetSh.Extensions.IEnumerable">
            <summary>
            Extension functions for <see cref="T:System.Collections.IEnumerable"/> samples.
            </summary>
        </member>
        <member name="M:NetSh.Extensions.IEnumerable.Write(System.Collections.IEnumerable)">
            <summary>
            Write all items of <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="collection">Collection to write.</param>
        </member>
        <member name="M:NetSh.Extensions.IEnumerable.WriteLine(System.Collections.IEnumerable)">
            <summary>
            WriteLine all items of <see cref="T:System.Collections.IEnumerable"/>.
            </summary>
            <param name="collection">Collection to write.</param>
        </member>
        <member name="M:NetSh.Extensions.IEnumerable.GetValue(System.Collections.IEnumerable,System.Char)">
            <summary>
            Returns <see cref="M:System.Console.Write(System.String)"/> value of <see cref="T:System.Collections.IEnumerable"/>
            </summary>
            <param name="collection">Collection.</param>
            <param name="sep">Seperator of items.</param>
        </member>
        <member name="T:NetSh.Extensions.String">
            <summary>
            Extension functions for <see cref="T:System.String"/> samples.
            </summary>
        </member>
        <member name="M:NetSh.Extensions.String.Write(System.String)">
            <summary>
            Write.
            </summary>
            <param name="str"><see cref="T:System.String"/> to write.</param>
        </member>
        <member name="M:NetSh.Extensions.String.WriteLine(System.String)">
            <summary>
            WriteLine.
            </summary>
            <param name="str"><see cref="T:System.String"/> to write.</param>
        </member>
        <member name="M:NetSh.Extensions.String.WriteChars(System.String)">
            <summary>
            Write characters.
            </summary>
            <param name="str"><see cref="T:System.String"/> to write.</param>
        </member>
        <member name="M:NetSh.Extensions.String.WriteLineChars(System.String)">
            <summary>
            WriteLine characters.
            </summary>
            <param name="str"><see cref="T:System.String"/> to write.</param>
        </member>
        <member name="T:NetSh.INetShellCommand">
            <summary>
            Interface for commans of <see cref="T:NetSh.NetShell"/>.
            </summary>
        </member>
        <member name="P:NetSh.INetShellCommand.Command">
            <summary>
            Command.
            </summary>
        </member>
        <member name="P:NetSh.INetShellCommand.Description">
            <summary>
            Description of command.
            </summary>
        </member>
        <member name="P:NetSh.INetShellCommand.Action">
            <summary>
            Action of command.
            </summary>
        </member>
        <member name="T:NetSh.NetShell">
            <summary>
            NetShell, shell tool.
            </summary>
        </member>
        <member name="M:NetSh.NetShell.#ctor">
            <summary>
            Initialize new instance of <see cref="T:NetSh.NetShell"/>
            </summary>
        </member>
        <member name="M:NetSh.NetShell.#ctor(NetSh.INetShellCommand[])">
            <summary>
            Initialize new instance of <see cref="T:NetSh.NetShell"/>
            </summary>
            <param name="commands">Commands.</param>
        </member>
        <member name="M:NetSh.NetShell.#ctor(System.Collections.Generic.IEnumerable{NetSh.INetShellCommand})">
            <summary>
            Initialize new instance of <see cref="T:NetSh.NetShell"/>
            </summary>
            <param name="commands">Commands.</param>
        </member>
        <member name="E:NetSh.NetShell.CommandProcess">
            <summary>
            This happens before command processing.
            </summary>
        </member>
        <member name="E:NetSh.NetShell.CommandProcessed">
            <summary>
            This happens after command processed.
            </summary>
        </member>
        <member name="E:NetSh.NetShell.BeforePrompt">
            <summary>
            This happens before <see cref="P:NetSh.NetShell.Prompt"/> print.
            </summary>
        </member>
        <member name="E:NetSh.NetShell.AfterPrompt">
            <summary>
            This happens after <see cref="P:NetSh.NetShell.Prompt"/> print.
            </summary>
        </member>
        <member name="M:NetSh.NetShell.Help(System.Int32)">
            <summary>
            Show help.
            </summary>
            <param name="spacecount">Whitespace count of between commands and descriptions.</param>
        </member>
        <member name="M:NetSh.NetShell.Exit">
            <summary>
            Exit from shell on next command.
            </summary>
        </member>
        <member name="M:NetSh.NetShell.GetInput">
            <summary>
            Returns user input by shell settings.
            </summary>
        </member>
        <member name="M:NetSh.NetShell.GetCommands(System.String)">
            <summary>
            Returns matched commands by shell settings.
            </summary>
            <param name="cmd">Command sample.</param>
        </member>
        <member name="M:NetSh.NetShell.ProcessCommand(System.String)">
            <summary>
            Process the command and returns true if success, returns false if not.
            </summary>
            <param name="cmd">Command to process.</param>
        </member>
        <member name="M:NetSh.NetShell.AddCmd(System.String,System.String,System.Action{NetSh.INetShellCommand,System.String})">
            <summary>
            Add new command to <see cref="P:NetSh.NetShell.Commands"/>
            </summary>
            <param name="cmd">Command.</param>
            <param name="desc">Description of command.</param>
            <param name="act">Action of command.</param>
        </member>
        <member name="M:NetSh.NetShell.Loop">
            <summary>
            Start command loop.
            </summary>
        </member>
        <member name="M:NetSh.NetShell.PostCmd">
            <summary>
            Run a command shell entry.
            </summary>
        </member>
        <member name="P:NetSh.NetShell.Commands">
            <summary>
            Commands of shell.
            </summary>
        </member>
        <member name="P:NetSh.NetShell.Prompt">
            <summary>
            Prompt input.
            </summary>
        </member>
        <member name="P:NetSh.NetShell.IgnoreWhiteSpace">
            <summary>
            Ignore whitespace at start and end on commands.
            </summary>
        </member>
        <member name="P:NetSh.NetShell.IgnoreCase">
            <summary>
            Ignore case on commands.
            </summary>
        </member>
        <member name="P:NetSh.NetShell.Mode">
            <summary>
            Mode of shell.
            </summary>
        </member>
        <member name="T:NetSh.NetShellEventArgs">
            <summary>
            Event arguments for <see cref="T:NetSh.NetShell"/>.
            </summary>
        </member>
        <member name="M:NetSh.NetShellEventArgs.#ctor(NetSh.INetShellCommand)">
            <summary>
            Initialize new instance of <see cref="T:NetSh.NetShellEventArgs"/>
            </summary>
            <param name="cmd"><see cref="T:NetSh.INetShellCommand"/> of event.</param>
        </member>
        <member name="M:NetSh.NetShellEventArgs.#ctor(NetSh.INetShellCommand,System.String)">
            <summary>
            Initialize new instance of <see cref="T:NetSh.NetShellEventArgs"/>
            </summary>
            <param name="cmd"><see cref="T:NetSh.INetShellCommand"/> of event.</param>
            <param name="input">Inputted command.</param>
        </member>
        <member name="P:NetSh.NetShellEventArgs.Cmd">
            <summary>
            Command of event.
            </summary>
        </member>
        <member name="P:NetSh.NetShellEventArgs.Input">
            <summary>
            Inputted command.
            </summary>
        </member>
        <member name="T:NetSh.NetShellCancelEventArgs">
            <summary>
            Cancel event arguments for <see cref="T:NetSh.NetShell"/>.
            </summary>
        </member>
        <member name="M:NetSh.NetShellCancelEventArgs.#ctor(NetSh.INetShellCommand)">
            <summary>
            Initialize new instance of <see cref="T:NetSh.NetShellCancelEventArgs"/>
            </summary>
            <param name="cmd"><see cref="T:NetSh.INetShellCommand"/> of event.</param>
        </member>
        <member name="M:NetSh.NetShellCancelEventArgs.#ctor(NetSh.INetShellCommand,System.String)">
            <summary>
            Initialize new instance of <see cref="T:NetSh.NetShellEventArgs"/>
            </summary>
            <param name="cmd"><see cref="T:NetSh.INetShellCommand"/> of event.</param>
            <param name="input">Inputted command.</param>
        </member>
        <member name="P:NetSh.NetShellCancelEventArgs.Cmd">
            <summary>
            Command of event.
            </summary>
        </member>
        <member name="P:NetSh.NetShellCancelEventArgs.Cancel">
            <summary>
            Cancel state of process.
            </summary>
        </member>
        <member name="P:NetSh.NetShellCancelEventArgs.Input">
            <summary>
            Inputted command.
            </summary>
        </member>
        <member name="T:NetSh.NetShellMode">
            <summary>
            Modes of <see cref="T:NetSh.NetShell"/>.
            </summary>
        </member>
        <member name="F:NetSh.NetShellMode.FullMatch">
            <summary>
            It works as a result of a complete match of the command.
            </summary>
        </member>
        <member name="F:NetSh.NetShellMode.Namespace">
            <summary>
            It is enough to start with the command. Suitable mode for parameterized commands.
            </summary>
        </member>
        <member name="T:NetSh.NetShellCommand">
            <summary>
            Command sample of <see cref="T:NetSh.NetShell"/>.
            </summary>
        </member>
        <member name="M:NetSh.NetShellCommand.#ctor(System.String)">
            <summary>
            Initialize new instance of <see cref="T:NetSh.NetShellCommand"/>
            </summary>
            <param name="cmd">Command.</param>
        </member>
        <member name="M:NetSh.NetShellCommand.#ctor(System.String,System.String)">
            <summary>
            Initialize new instance of <see cref="T:NetSh.NetShellCommand"/>
            </summary>
            <param name="cmd">Command.</param>
            <param name="desc">Description.</param>
        </member>
        <member name="M:NetSh.NetShellCommand.#ctor(System.String,System.String,System.Action{NetSh.INetShellCommand,System.String})">
            <summary>
            Initialize new instance of <see cref="T:NetSh.NetShellCommand"/>
            </summary>
            <param name="cmd">Command.</param>
            <param name="desc">Description.</param>
            <param name="act">Action.</param>
        </member>
        <member name="P:NetSh.NetShellCommand.Command">
            <summary>
            Command.
            </summary>
        </member>
        <member name="P:NetSh.NetShellCommand.Description">
            <summary>
            Description of command.
            </summary>
        </member>
        <member name="P:NetSh.NetShellCommand.Action">
            <summary>
            Action of command.
            </summary>
        </member>
        <member name="T:NetSh.Tools.ParameterEngine">
            <summary>
            Parameter engine of <see cref="T:NetSh.NetShell"/>.
            </summary>
        </member>
        <member name="M:NetSh.Tools.ParameterEngine.GetNamespace(System.String)">
            <summary>
            Returns namesapce of command.
            </summary>
            <param name="cmd">Command.</param>
        </member>
        <member name="M:NetSh.Tools.ParameterEngine.RemoveNamespace(System.String)">
            <summary>
            Returns removed namesapce command.
            </summary>
            <param name="cmd">Command.</param>
        </member>
        <member name="M:NetSh.Tools.ParameterEngine.GetParameters(System.String,System.String)">
            <summary>
            Returns parameter(s) of command.
            </summary>
            <param name="cmd">Command.</param>
            <param name="delimiter">Parameter delimiter.</param>
        </member>
        <member name="M:NetSh.Tools.ParameterEngine.GetParameters(System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            Returns parameter(s) of command.
            </summary>
            <param name="cmd">Command.</param>
            <param name="pattern">Pattern of parameters.</param>
        </member>
        <member name="M:NetSh.Tools.ParameterEngine.RemoveParameters(System.String,System.String)">
            <summary>
            Returns removed parameters command.
            </summary>
            <param name="cmd">Command.</param>
            <param name="delimiter">Parameter delimiter.</param>
        </member>
        <member name="M:NetSh.Tools.ParameterEngine.RemoveParameters(System.String,System.Text.RegularExpressions.Regex)">
            <summary>
            Returns removed parameters command.
            </summary>
            <param name="cmd">Command.</param>
            <param name="pattern">Pattern of parameters.</param>
        </member>
        <member name="T:NetSh.Tools.Printer">
            <summary>
            Console printer of <see cref="T:NetSh.NetShell"/>.
            </summary>
        </member>
        <member name="M:NetSh.Tools.Printer.Print(System.Object)">
            <summary>
            Print object to screen.
            </summary>
            <param name="obj">Object to print.</param>
        </member>
        <member name="M:NetSh.Tools.Printer.Print(System.Object,System.ConsoleColor)">
            <summary>
            Print object to screen.
            </summary>
            <param name="obj">Object to print.</param>
            <param name="color">Color of print.</param>
        </member>
        <member name="M:NetSh.Tools.Printer.Println(System.Object)">
            <summary>
            Print object and new line to screen.
            </summary>
            <param name="obj">Object to print.</param>
        </member>
        <member name="M:NetSh.Tools.Printer.Println(System.Object,System.ConsoleColor)">
            <summary>
            Print object and new line to screen.
            </summary>
            <param name="obj">Object to print.</param>
            <param name="color">Color of print.</param>
        </member>
    </members>
</doc>
